The Client and Single-threaded Server

The client takes 3 arguments as input: the server address, server port number, and an initial sequence number. The
server takes in a server port argument, and should be started and be listening on the specified server port.

A three-way handshake communication using TCP as follows:
● Step 1: The client sends “HELLO X” to the server, where X is an initial sequence number.
● Step 2: The server receives and prints the “HELLO X” message from the client, and sends
“HELLO Y” to the client, where Y is X+1.
● Step 3: The client receives “HELLO Y” message from the server, prints the message to screen,
and does either one of the following:
o If Y = X+1, the client sends “HELLO Z” to the server, where Z=Y+1, and closes the
connection.
o If Y != X+1, the client prints an “ERROR” message, and closes the connection.
● Step 4: If the server receives the “HELLO Z” message from the client, and prints the message to
screen. In addition, if Z != Y+1, prints an “ERROR”. The server then closes the connection.

Your implementation has to work in the Docker Container.

You can run multiple clients and the server on the same machine. The server listens on its port, and when
a client connects, a temporary port is assigned to the client-server communication.

Generally, the server and a client in the implementation should work on any two hosts in the network.
That being said, since it's running all within one virtual machine, the server is
listening on a port of your choice, and clients and the server all run on the same machine with the same IP.
The loopback address 127.0.0.1 has been chosen as the default IP address for the server and all clients.
